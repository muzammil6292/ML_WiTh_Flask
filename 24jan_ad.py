# -*- coding: utf-8 -*-
"""24jan_ad.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r0diCJdWomwdK54WUvS4D75hcNbcBmR7
"""

import numpy as np

#create a sample data (simple list of data points)
data=[20,3,4,7,23,4,5,6,7,8,4,44,345,66,54,432]

#step1: calculate q1 (25th percentile) and q3 (75th percentile)
q1=np.percentile(data, 25)
q3=np.percentile(data, 75)

#step2: calculate iqr (interquarttile range)
iqr=q3-q1

#step3: calculate lower and upper bound for outliers
lower_bound=q1-1.5*iqr
upper_bound=q3+1.5*iqr

#step4: find the outliers (values outside the lower and upper bounds)
outliers=[x for x in data if x < lower_bound or x > upper_bound]

#output the results
print(f"Q1 (25th percentile): {q1}")
print(f"Q3 (75th percentile): {q3}")
print(f"IQR: {iqr}")
print(f"Lower bound: {lower_bound}")
print(f"Upper bound: {upper_bound}")
print(f"Outliers: {outliers}")

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#create a sample dataset with some outliers
np.random.seed(20)
data=pd.DataFrame({
    'value': np.concatenate([np.random.normal(0,1,1000), np.random.normal(5,1,25)])
})

#calculate the IQR for box plot-based outlier detection
q1=data['value'].quantile(0.25)
q3= data['value'].quantile(0.75)
iqr=q3-q1

#define outlier thresholds
lower_bound=q1-1.5*iqr
upper_bound=q3+1.5*iqr

#identify outliers
outliers=data[(data['value'] < lower_bound) | (data['value'] > upper_bound)]